{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNrvGEZ6gvizPFxKCXJj9Dp",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jeffersonramelo/Peper-relato-integrado-DIF-DIF/blob/main/modelos%20de%20regress%C3%A3o\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pAOcNiJxZUuX",
        "outputId": "e89a079c-9b13-4429-b02f-6eec64ba1822"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  codigo    Nome Setor Econômico\\nBovespa  \\\n",
            "0   AALR  Alliar                    Saúde   \n",
            "1   AALR  Alliar                    Saúde   \n",
            "2   AALR  Alliar                    Saúde   \n",
            "3   AALR  Alliar                    Saúde   \n",
            "4   AALR  Alliar                    Saúde   \n",
            "\n",
            "                                    Subsetor Bovespa Setor\\nEconomatica  \\\n",
            "0  Serviços médico-hospitalares análises e diagnó...             Outros   \n",
            "1  Serviços médico-hospitalares análises e diagnó...             Outros   \n",
            "2  Serviços médico-hospitalares análises e diagnó...             Outros   \n",
            "3  Serviços médico-hospitalares análises e diagnó...             Outros   \n",
            "4  Serviços médico-hospitalares análises e diagnó...             Outros   \n",
            "\n",
            "   Valor Mercado30Abr11  Valor Mercado30Mai11  Valor Mercado30Jun11  \\\n",
            "0          2.695529e+06          2.693169e+06          2.810304e+06   \n",
            "1          2.284491e+06          2.358640e+06          2.298233e+06   \n",
            "2          1.045598e+06          1.351944e+06          1.390977e+06   \n",
            "3          1.240830e+06          1.206527e+06          1.217182e+06   \n",
            "4          1.772228e+06          1.671735e+06          1.705725e+06   \n",
            "\n",
            "   PU30Abr11  PU30Mai11  ...  Nome_Companhia  modelo1  tra1  tem1  modelo2  \\\n",
            "0  22.850000  22.830000  ...             NaN      1.0     0   1.0      1.0   \n",
            "1  19.410000  20.040000  ...             NaN      1.0     0   0.0      1.0   \n",
            "2   8.840000  11.430000  ...             NaN      NaN     0   NaN      1.0   \n",
            "3  10.490000  10.200000  ...             NaN      NaN     0   NaN      1.0   \n",
            "4  14.867034  14.024007  ...             NaN      NaN     0   NaN      NaN   \n",
            "\n",
            "   tra2  tem2  modelo3  tra3  tem3  \n",
            "0   0.0   1.0        1   0.0     1  \n",
            "1   0.0   1.0        1   0.0     1  \n",
            "2   0.0   0.0        1   0.0     1  \n",
            "3   0.0   0.0        1   0.0     0  \n",
            "4   NaN   NaN        1   0.0     0  \n",
            "\n",
            "[5 rows x 62 columns]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Ler o arquivo Excel\n",
        "df = pd.read_excel('/content/tabelaunida_difdif22a17.xlsx')\n",
        "\n",
        "# Mostrar as primeiras linhas do DataFrame para verificar a leitura\n",
        "print(df.head())\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Variável dependente: valor de mercado1"
      ],
      "metadata": {
        "id": "QLvsrg9AgSvl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo1'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Abr11\") ~ tra1 + tem1 + tra1:tem1 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kekvr95mbyJY",
        "outputId": "bc66381e-7602-42ae-f440-9cd31ce56bff"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.782\n",
            "Model:                                   OLS   Adj. R-squared:                  0.777\n",
            "Method:                        Least Squares   F-statistic:                     172.8\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          2.27e-152\n",
            "Time:                               22:56:39   Log-Likelihood:                -8589.7\n",
            "No. Observations:                        493   AIC:                         1.720e+04\n",
            "Df Residuals:                            482   BIC:                         1.725e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    1.013e+06   6.26e+05      1.619      0.106   -2.17e+05    2.24e+06\n",
            "tra1                        -5.501e+05   2.18e+06     -0.253      0.801   -4.83e+06    3.73e+06\n",
            "tem1                        -1.438e+06   8.51e+05     -1.691      0.091   -3.11e+06    2.33e+05\n",
            "tra1:tem1                    1.841e+05   3.06e+06      0.060      0.952   -5.83e+06     6.2e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.4435      0.073     19.870      0.000       1.301       1.586\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.6072      0.295     -2.060      0.040      -1.186      -0.028\n",
            "Q(\"Intang Dez 2010\")           -0.4431      0.096     -4.597      0.000      -0.633      -0.254\n",
            "Q(\"CaixaEEqCx Dez 2010\")        1.5912      0.272      5.844      0.000       1.056       2.126\n",
            "Q(\"Receita Dez 2010\")          -0.1697      0.023     -7.234      0.000      -0.216      -0.124\n",
            "Q(\"CxGerOp Dez 2010\")           1.4825      0.217      6.821      0.000       1.055       1.910\n",
            "Q(\"OuReAb Dez 2010\")            4.7415      0.666      7.114      0.000       3.432       6.051\n",
            "==============================================================================\n",
            "Omnibus:                      361.345   Durbin-Watson:                   1.179\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            12340.646\n",
            "Skew:                           2.735   Prob(JB):                         0.00\n",
            "Kurtosis:                      26.892   Cond. No.                     2.83e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 2.83e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Variável dependente: valor de mercado2"
      ],
      "metadata": {
        "id": "ktshsCFlgedX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo1'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Mai11\") ~ tra1 + tem1 + tra1:tem1 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-HqQBbHYgcoY",
        "outputId": "a8f0104b-1dbc-44c7-e47a-fc3536a58cd1"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Mai11\")   R-squared:                       0.782\n",
            "Model:                                   OLS   Adj. R-squared:                  0.778\n",
            "Method:                        Least Squares   F-statistic:                     171.6\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          5.29e-151\n",
            "Time:                               22:59:45   Log-Likelihood:                -8508.5\n",
            "No. Observations:                        488   AIC:                         1.704e+04\n",
            "Df Residuals:                            477   BIC:                         1.709e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                     9.51e+05   6.38e+05      1.490      0.137   -3.03e+05     2.2e+06\n",
            "tra1                        -5.184e+05    2.2e+06     -0.235      0.814   -4.85e+06    3.81e+06\n",
            "tem1                         -1.09e+06   8.66e+05     -1.258      0.209   -2.79e+06    6.12e+05\n",
            "tra1:tem1                    8.934e+05    3.1e+06      0.288      0.773    -5.2e+06    6.99e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.4470      0.074     19.625      0.000       1.302       1.592\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.5840      0.299     -1.956      0.051      -1.171       0.003\n",
            "Q(\"Intang Dez 2010\")           -0.4029      0.098     -4.127      0.000      -0.595      -0.211\n",
            "Q(\"CaixaEEqCx Dez 2010\")        1.5637      0.276      5.672      0.000       1.022       2.105\n",
            "Q(\"Receita Dez 2010\")          -0.1868      0.024     -7.868      0.000      -0.233      -0.140\n",
            "Q(\"CxGerOp Dez 2010\")           1.5682      0.220      7.127      0.000       1.136       2.001\n",
            "Q(\"OuReAb Dez 2010\")            4.6985      0.678      6.931      0.000       3.366       6.031\n",
            "==============================================================================\n",
            "Omnibus:                      338.265   Durbin-Watson:                   1.180\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            10241.271\n",
            "Skew:                           2.548   Prob(JB):                         0.00\n",
            "Kurtosis:                      24.856   Cond. No.                     2.83e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 2.83e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Variável dependente: valor de mercado3"
      ],
      "metadata": {
        "id": "sFkk7DrAgvc3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo1'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Jun11\") ~ tra1 + tem1 + tra1:tem1 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zMBVNK7fg0zw",
        "outputId": "dbceb588-6014-404a-c8e3-627d372efe89"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   R-squared:                       0.785\n",
            "Model:                                   OLS   Adj. R-squared:                  0.781\n",
            "Method:                        Least Squares   F-statistic:                     175.1\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          5.67e-153\n",
            "Time:                               23:01:12   Log-Likelihood:                -8546.8\n",
            "No. Observations:                        490   AIC:                         1.712e+04\n",
            "Df Residuals:                            479   BIC:                         1.716e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    2.816e+05   6.42e+05      0.438      0.661   -9.81e+05    1.54e+06\n",
            "tra1                        -1.675e+06   2.22e+06     -0.755      0.451   -6.04e+06    2.69e+06\n",
            "tem1                         1.832e+05    8.7e+05      0.211      0.833   -1.53e+06    1.89e+06\n",
            "tra1:tem1                     2.04e+06   3.12e+06      0.653      0.514    -4.1e+06    8.18e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.5598      0.074     21.059      0.000       1.414       1.705\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.9062      0.301     -3.015      0.003      -1.497      -0.316\n",
            "Q(\"Intang Dez 2010\")           -0.4365      0.098     -4.441      0.000      -0.630      -0.243\n",
            "Q(\"CaixaEEqCx Dez 2010\")        1.3811      0.278      4.974      0.000       0.835       1.927\n",
            "Q(\"Receita Dez 2010\")          -0.1821      0.024     -7.618      0.000      -0.229      -0.135\n",
            "Q(\"CxGerOp Dez 2010\")           1.5289      0.222      6.900      0.000       1.094       1.964\n",
            "Q(\"OuReAb Dez 2010\")            3.4738      0.679      5.113      0.000       2.139       4.809\n",
            "==============================================================================\n",
            "Omnibus:                      365.776   Durbin-Watson:                   1.236\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            16028.437\n",
            "Skew:                           2.717   Prob(JB):                         0.00\n",
            "Kurtosis:                      30.487   Cond. No.                     2.83e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 2.83e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "VM escalonado_ativo total1"
      ],
      "metadata": {
        "id": "SrAhphQoiwww"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Abr11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "McjkYPJ8ioBH",
        "outputId": "c476e945-614d-462b-a148-84ef44623398"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.016\n",
            "Model:                                   OLS   Adj. R-squared:                 -0.004\n",
            "Method:                        Least Squares   F-statistic:                    0.7947\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.634\n",
            "Time:                               23:08:57   Log-Likelihood:                -8943.3\n",
            "No. Observations:                        492   AIC:                         1.791e+04\n",
            "Df Residuals:                            481   BIC:                         1.795e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         6.55e+06   1.74e+06      3.756      0.000    3.12e+06    9.98e+06\n",
            "tra1                             6.181e+06   4.59e+06      1.346      0.179   -2.84e+06    1.52e+07\n",
            "tem1                            -7.598e+05   1.82e+06     -0.417      0.677   -4.34e+06    2.82e+06\n",
            "tra1:tem1                        3.096e+05   6.49e+06      0.048      0.962   -1.24e+07    1.31e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.522e+05   3.66e+05      0.962      0.336   -3.67e+05    1.07e+06\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  2.648e+05   1.14e+06      0.233      0.816   -1.97e+06     2.5e+06\n",
            "Q(\"Intang Dez 2010_esc\")         1.598e+06   3.22e+06      0.497      0.620   -4.72e+06    7.92e+06\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")    -4.021e+04   1.01e+06     -0.040      0.968   -2.03e+06    1.95e+06\n",
            "Q(\"Receita Dez 2010_esc\")        1.525e+05   1.33e+06      0.115      0.909   -2.46e+06    2.77e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")         4.32e+06   5.08e+06      0.851      0.395   -5.65e+06    1.43e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")         5.984e+06    1.5e+07      0.399      0.690   -2.35e+07    3.55e+07\n",
            "==============================================================================\n",
            "Omnibus:                      684.829   Durbin-Watson:                   1.044\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           110093.979\n",
            "Skew:                           7.205   Prob(JB):                         0.00\n",
            "Kurtosis:                      74.852   Cond. No.                         59.7\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "VM escalonado_ativo total2"
      ],
      "metadata": {
        "id": "00xWpCc9jBwA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Mai11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6pU0wFSgi9lC",
        "outputId": "d1575909-144c-451c-cb25-98afcc262ea7"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.016\n",
            "Model:                                   OLS   Adj. R-squared:                 -0.004\n",
            "Method:                        Least Squares   F-statistic:                    0.7947\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.634\n",
            "Time:                               23:10:23   Log-Likelihood:                -8943.3\n",
            "No. Observations:                        492   AIC:                         1.791e+04\n",
            "Df Residuals:                            481   BIC:                         1.795e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         6.55e+06   1.74e+06      3.756      0.000    3.12e+06    9.98e+06\n",
            "tra1                             6.181e+06   4.59e+06      1.346      0.179   -2.84e+06    1.52e+07\n",
            "tem1                            -7.598e+05   1.82e+06     -0.417      0.677   -4.34e+06    2.82e+06\n",
            "tra1:tem1                        3.096e+05   6.49e+06      0.048      0.962   -1.24e+07    1.31e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.522e+05   3.66e+05      0.962      0.336   -3.67e+05    1.07e+06\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  2.648e+05   1.14e+06      0.233      0.816   -1.97e+06     2.5e+06\n",
            "Q(\"Intang Dez 2010_esc\")         1.598e+06   3.22e+06      0.497      0.620   -4.72e+06    7.92e+06\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")    -4.021e+04   1.01e+06     -0.040      0.968   -2.03e+06    1.95e+06\n",
            "Q(\"Receita Dez 2010_esc\")        1.525e+05   1.33e+06      0.115      0.909   -2.46e+06    2.77e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")         4.32e+06   5.08e+06      0.851      0.395   -5.65e+06    1.43e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")         5.984e+06    1.5e+07      0.399      0.690   -2.35e+07    3.55e+07\n",
            "==============================================================================\n",
            "Omnibus:                      684.829   Durbin-Watson:                   1.044\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           110093.979\n",
            "Skew:                           7.205   Prob(JB):                         0.00\n",
            "Kurtosis:                      74.852   Cond. No.                         59.7\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "VM escalonado_ativo total2"
      ],
      "metadata": {
        "id": "Z_MVViR-jRaA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Jun11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RSLCs96_jO26",
        "outputId": "109010f7-9304-47c8-a584-023335489184"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.016\n",
            "Model:                                   OLS   Adj. R-squared:                 -0.004\n",
            "Method:                        Least Squares   F-statistic:                    0.7947\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.634\n",
            "Time:                               23:11:27   Log-Likelihood:                -8943.3\n",
            "No. Observations:                        492   AIC:                         1.791e+04\n",
            "Df Residuals:                            481   BIC:                         1.795e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         6.55e+06   1.74e+06      3.756      0.000    3.12e+06    9.98e+06\n",
            "tra1                             6.181e+06   4.59e+06      1.346      0.179   -2.84e+06    1.52e+07\n",
            "tem1                            -7.598e+05   1.82e+06     -0.417      0.677   -4.34e+06    2.82e+06\n",
            "tra1:tem1                        3.096e+05   6.49e+06      0.048      0.962   -1.24e+07    1.31e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.522e+05   3.66e+05      0.962      0.336   -3.67e+05    1.07e+06\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  2.648e+05   1.14e+06      0.233      0.816   -1.97e+06     2.5e+06\n",
            "Q(\"Intang Dez 2010_esc\")         1.598e+06   3.22e+06      0.497      0.620   -4.72e+06    7.92e+06\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")    -4.021e+04   1.01e+06     -0.040      0.968   -2.03e+06    1.95e+06\n",
            "Q(\"Receita Dez 2010_esc\")        1.525e+05   1.33e+06      0.115      0.909   -2.46e+06    2.77e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")         4.32e+06   5.08e+06      0.851      0.395   -5.65e+06    1.43e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")         5.984e+06    1.5e+07      0.399      0.690   -2.35e+07    3.55e+07\n",
            "==============================================================================\n",
            "Omnibus:                      684.829   Durbin-Watson:                   1.044\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           110093.979\n",
            "Skew:                           7.205   Prob(JB):                         0.00\n",
            "Kurtosis:                      74.852   Cond. No.                         59.7\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Abr11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T0EYpIVEjrO1",
        "outputId": "3d1f7afe-2175-4030-9678-3224230ae82f"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Abr11\")   R-squared:                       0.572\n",
            "Model:                            OLS   Adj. R-squared:                  0.563\n",
            "Method:                 Least Squares   F-statistic:                     62.62\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):           6.93e-80\n",
            "Time:                        23:14:53   Log-Likelihood:                -1993.1\n",
            "No. Observations:                 479   AIC:                             4008.\n",
            "Df Residuals:                     468   BIC:                             4054.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          10.6331      1.165      9.129      0.000       8.344      12.922\n",
            "tra1                               -1.2302      3.760     -0.327      0.744      -8.618       6.158\n",
            "tem1                               -2.4360      1.498     -1.626      0.105      -5.379       0.507\n",
            "tra1:tem1                           1.2791      5.309      0.241      0.810      -9.154      11.712\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0097      0.003      3.158      0.002       0.004       0.016\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0693      0.023      3.015      0.003       0.024       0.114\n",
            "Q(\"Intang Dez 2010_esc\")            0.1954      0.057      3.432      0.001       0.084       0.307\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.6443      0.029     21.898      0.000       0.586       0.702\n",
            "Q(\"Receita Dez 2010_esc\")           0.1137      0.016      7.278      0.000       0.083       0.144\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0355      0.052      0.679      0.497      -0.067       0.138\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0074      0.117      0.063      0.950      -0.223       0.238\n",
            "==============================================================================\n",
            "Omnibus:                      213.824   Durbin-Watson:                   1.285\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1423.223\n",
            "Skew:                           1.816   Prob(JB):                    8.93e-310\n",
            "Kurtosis:                      10.624   Cond. No.                     7.06e+03\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 7.06e+03. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Mai11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iSoEM_U4kJSp",
        "outputId": "ad5c25d9-0603-4edd-fa28-f5bb1a3d77bd"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Mai11\")   R-squared:                       0.577\n",
            "Model:                            OLS   Adj. R-squared:                  0.568\n",
            "Method:                 Least Squares   F-statistic:                     64.02\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):           3.17e-81\n",
            "Time:                        23:15:26   Log-Likelihood:                -2000.3\n",
            "No. Observations:                 480   AIC:                             4023.\n",
            "Df Residuals:                     469   BIC:                             4069.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          11.2209      1.163      9.651      0.000       8.936      13.505\n",
            "tra1                               -1.5868      3.784     -0.419      0.675      -9.023       5.849\n",
            "tem1                               -1.6319      1.506     -1.084      0.279      -4.591       1.327\n",
            "tra1:tem1                           2.7167      5.342      0.509      0.611      -7.781      13.215\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0082      0.003      2.670      0.008       0.002       0.014\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0554      0.024      2.350      0.019       0.009       0.102\n",
            "Q(\"Intang Dez 2010_esc\")            0.2295      0.057      4.018      0.000       0.117       0.342\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.6930      0.031     22.613      0.000       0.633       0.753\n",
            "Q(\"Receita Dez 2010_esc\")           0.0845      0.014      5.916      0.000       0.056       0.113\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0572      0.053      1.079      0.281      -0.047       0.161\n",
            "Q(\"OuReAb Dez 2010_esc\")           -0.0474      0.118     -0.401      0.688      -0.279       0.185\n",
            "==============================================================================\n",
            "Omnibus:                      215.055   Durbin-Watson:                   1.208\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1076.561\n",
            "Skew:                           1.946   Prob(JB):                    1.69e-234\n",
            "Kurtosis:                       9.220   Cond. No.                     7.06e+03\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 7.06e+03. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo1'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Jun11\") ~ tra1 + tem1 + tra1:tem1 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oxB6WBQxkPBO",
        "outputId": "ea9a532a-b92e-49c1-a6db-374a8d8ee4f4"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Jun11\")   R-squared:                       0.589\n",
            "Model:                            OLS   Adj. R-squared:                  0.581\n",
            "Method:                 Least Squares   F-statistic:                     67.06\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):           8.14e-84\n",
            "Time:                        23:16:00   Log-Likelihood:                -1999.4\n",
            "No. Observations:                 478   AIC:                             4021.\n",
            "Df Residuals:                     467   BIC:                             4067.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                           8.5664      1.177      7.281      0.000       6.254      10.878\n",
            "tra1                               -0.9678      3.844     -0.252      0.801      -8.521       6.585\n",
            "tem1                                1.9471      1.535      1.268      0.205      -1.069       4.964\n",
            "tra1:tem1                           2.2332      5.428      0.411      0.681      -8.434      12.900\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0074      0.003      2.350      0.019       0.001       0.013\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0770      0.024      3.274      0.001       0.031       0.123\n",
            "Q(\"Intang Dez 2010_esc\")            0.2069      0.059      3.503      0.001       0.091       0.323\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.6978      0.030     23.205      0.000       0.639       0.757\n",
            "Q(\"Receita Dez 2010_esc\")           0.0937      0.015      6.288      0.000       0.064       0.123\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.1119      0.054      2.084      0.038       0.006       0.217\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0538      0.236      0.229      0.819      -0.409       0.517\n",
            "==============================================================================\n",
            "Omnibus:                      197.418   Durbin-Watson:                   1.201\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1245.610\n",
            "Skew:                           1.670   Prob(JB):                    3.31e-271\n",
            "Kurtosis:                      10.168   Cond. No.                     7.06e+03\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 7.06e+03. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo2'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Abr11\") ~ tra2 + tem2 + tra2:tem2 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6pysdiVTkbSd",
        "outputId": "1e83718a-14be-451a-9682-00b8f19dc917"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.782\n",
            "Model:                                   OLS   Adj. R-squared:                  0.779\n",
            "Method:                        Least Squares   F-statistic:                     260.3\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          4.92e-232\n",
            "Time:                               23:16:54   Log-Likelihood:                -12847.\n",
            "No. Observations:                        735   AIC:                         2.572e+04\n",
            "Df Residuals:                            724   BIC:                         2.577e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    1.117e+06   5.35e+05      2.088      0.037    6.67e+04    2.17e+06\n",
            "tra2                        -3.303e+06    3.4e+06     -0.970      0.332   -9.99e+06    3.38e+06\n",
            "tem2                        -1.865e+06   7.16e+05     -2.605      0.009   -3.27e+06   -4.59e+05\n",
            "tra2:tem2                     -2.4e+04   4.56e+06     -0.005      0.996   -8.99e+06    8.94e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.3412      0.067     19.933      0.000       1.209       1.473\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.5809      0.237     -2.450      0.015      -1.046      -0.116\n",
            "Q(\"Intang Dez 2010\")           -0.1756      0.094     -1.876      0.061      -0.359       0.008\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.5780      0.267      9.651      0.000       2.054       3.102\n",
            "Q(\"Receita Dez 2010\")          -0.2691      0.023    -11.825      0.000      -0.314      -0.224\n",
            "Q(\"CxGerOp Dez 2010\")           2.0067      0.191     10.523      0.000       1.632       2.381\n",
            "Q(\"OuReAb Dez 2010\")            6.9442      0.652     10.655      0.000       5.665       8.224\n",
            "==============================================================================\n",
            "Omnibus:                      369.236   Durbin-Watson:                   0.792\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             8717.621\n",
            "Skew:                           1.728   Prob(JB):                         0.00\n",
            "Kurtosis:                      19.514   Cond. No.                     4.50e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.5e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo2'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Mai11\") ~ tra2 + tem2 + tra2:tem2 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fZ4jm3IBklib",
        "outputId": "d81e9746-ddf5-4f84-80c5-7dbdbe7dfa05"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Mai11\")   R-squared:                       0.774\n",
            "Model:                                   OLS   Adj. R-squared:                  0.771\n",
            "Method:                        Least Squares   F-statistic:                     246.2\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          1.71e-224\n",
            "Time:                               23:17:28   Log-Likelihood:                -12817.\n",
            "No. Observations:                        730   AIC:                         2.566e+04\n",
            "Df Residuals:                            719   BIC:                         2.571e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    1.368e+06   5.78e+05      2.365      0.018    2.32e+05     2.5e+06\n",
            "tra2                        -4.011e+06   3.68e+06     -1.089      0.276   -1.12e+07    3.22e+06\n",
            "tem2                        -2.278e+06   7.77e+05     -2.932      0.003    -3.8e+06   -7.53e+05\n",
            "tra2:tem2                    2.905e+05   4.94e+06      0.059      0.953    -9.4e+06    9.99e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.4287      0.073     19.591      0.000       1.285       1.572\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.4529      0.256     -1.766      0.078      -0.956       0.051\n",
            "Q(\"Intang Dez 2010\")           -0.2223      0.101     -2.194      0.029      -0.421      -0.023\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.8238      0.289      9.772      0.000       2.256       3.391\n",
            "Q(\"Receita Dez 2010\")          -0.3101      0.025    -12.599      0.000      -0.358      -0.262\n",
            "Q(\"CxGerOp Dez 2010\")           2.0651      0.206     10.012      0.000       1.660       2.470\n",
            "Q(\"OuReAb Dez 2010\")            7.2184      0.708     10.201      0.000       5.829       8.608\n",
            "==============================================================================\n",
            "Omnibus:                      487.461   Durbin-Watson:                   0.829\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            21082.631\n",
            "Skew:                           2.398   Prob(JB):                         0.00\n",
            "Kurtosis:                      28.887   Cond. No.                     4.50e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.5e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo2'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Jun11\") ~ tra2 + tem2 + tra2:tem2 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EogsnpwBkxAG",
        "outputId": "3b4503e1-4c35-41ec-d711-6d82cdcd0228"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   R-squared:                       0.762\n",
            "Model:                                   OLS   Adj. R-squared:                  0.759\n",
            "Method:                        Least Squares   F-statistic:                     231.8\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          1.02e-217\n",
            "Time:                               23:18:09   Log-Likelihood:                -12901.\n",
            "No. Observations:                        733   AIC:                         2.582e+04\n",
            "Df Residuals:                            722   BIC:                         2.587e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    1.609e+06   6.03e+05      2.670      0.008    4.26e+05    2.79e+06\n",
            "tra2                         -3.75e+06   3.84e+06     -0.976      0.329   -1.13e+07    3.79e+06\n",
            "tem2                        -2.472e+06   8.09e+05     -3.056      0.002   -4.06e+06   -8.84e+05\n",
            "tra2:tem2                   -2.326e+05   5.15e+06     -0.045      0.964   -1.03e+07    9.88e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.5165      0.076     19.998      0.000       1.368       1.665\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.5985      0.268     -2.237      0.026      -1.124      -0.073\n",
            "Q(\"Intang Dez 2010\")           -0.2147      0.106     -2.032      0.043      -0.422      -0.007\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.6712      0.302      8.857      0.000       2.079       3.263\n",
            "Q(\"Receita Dez 2010\")          -0.3028      0.026    -11.790      0.000      -0.353      -0.252\n",
            "Q(\"CxGerOp Dez 2010\")           1.9373      0.215      9.001      0.000       1.515       2.360\n",
            "Q(\"OuReAb Dez 2010\")            6.1785      0.733      8.424      0.000       4.739       7.618\n",
            "==============================================================================\n",
            "Omnibus:                      470.258   Durbin-Watson:                   0.925\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            15920.797\n",
            "Skew:                           2.337   Prob(JB):                         0.00\n",
            "Kurtosis:                      25.348   Cond. No.                     4.50e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.5e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Abr11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Meo86WVfk8LN",
        "outputId": "55e83170-0eb5-4b3b-cfd6-94e24fa229b3"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.020\n",
            "Model:                                   OLS   Adj. R-squared:                  0.007\n",
            "Method:                        Least Squares   F-statistic:                     1.494\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.137\n",
            "Time:                               23:19:19   Log-Likelihood:                -13382.\n",
            "No. Observations:                        734   AIC:                         2.679e+04\n",
            "Df Residuals:                            723   BIC:                         2.684e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         7.27e+06   1.47e+06      4.958      0.000    4.39e+06    1.01e+07\n",
            "tra2                            -2.253e+06   7.28e+06     -0.309      0.757   -1.66e+07     1.2e+07\n",
            "tem2                            -6.214e+05   1.53e+06     -0.407      0.684   -3.62e+06    2.37e+06\n",
            "tra2:tem2                       -6.756e+05   9.69e+06     -0.070      0.944   -1.97e+07    1.84e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.044e+05   2.14e+05      1.421      0.156   -1.16e+05    7.25e+05\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  -2.25e+05   7.64e+05     -0.295      0.768   -1.72e+06    1.27e+06\n",
            "Q(\"Intang Dez 2010_esc\")         3.596e+06   3.68e+06      0.976      0.329   -3.63e+06    1.08e+07\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")     1.215e+06   5.64e+06      0.215      0.829   -9.85e+06    1.23e+07\n",
            "Q(\"Receita Dez 2010_esc\")       -1.423e+06   1.33e+06     -1.067      0.286   -4.04e+06    1.19e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")        1.237e+07   4.96e+06      2.495      0.013    2.64e+06    2.21e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")        -1.072e+07    1.7e+07     -0.629      0.530   -4.42e+07    2.27e+07\n",
            "==============================================================================\n",
            "Omnibus:                      978.370   Durbin-Watson:                   0.501\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           141147.505\n",
            "Skew:                           7.048   Prob(JB):                         0.00\n",
            "Kurtosis:                      69.457   Cond. No.                         81.4\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Mai11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cOl9H0FjlIt8",
        "outputId": "593bf92e-e87f-4c68-ee99-fc8b6eb2208e"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.020\n",
            "Model:                                   OLS   Adj. R-squared:                  0.007\n",
            "Method:                        Least Squares   F-statistic:                     1.494\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.137\n",
            "Time:                               23:19:44   Log-Likelihood:                -13382.\n",
            "No. Observations:                        734   AIC:                         2.679e+04\n",
            "Df Residuals:                            723   BIC:                         2.684e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         7.27e+06   1.47e+06      4.958      0.000    4.39e+06    1.01e+07\n",
            "tra2                            -2.253e+06   7.28e+06     -0.309      0.757   -1.66e+07     1.2e+07\n",
            "tem2                            -6.214e+05   1.53e+06     -0.407      0.684   -3.62e+06    2.37e+06\n",
            "tra2:tem2                       -6.756e+05   9.69e+06     -0.070      0.944   -1.97e+07    1.84e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.044e+05   2.14e+05      1.421      0.156   -1.16e+05    7.25e+05\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  -2.25e+05   7.64e+05     -0.295      0.768   -1.72e+06    1.27e+06\n",
            "Q(\"Intang Dez 2010_esc\")         3.596e+06   3.68e+06      0.976      0.329   -3.63e+06    1.08e+07\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")     1.215e+06   5.64e+06      0.215      0.829   -9.85e+06    1.23e+07\n",
            "Q(\"Receita Dez 2010_esc\")       -1.423e+06   1.33e+06     -1.067      0.286   -4.04e+06    1.19e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")        1.237e+07   4.96e+06      2.495      0.013    2.64e+06    2.21e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")        -1.072e+07    1.7e+07     -0.629      0.530   -4.42e+07    2.27e+07\n",
            "==============================================================================\n",
            "Omnibus:                      978.370   Durbin-Watson:                   0.501\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           141147.505\n",
            "Skew:                           7.048   Prob(JB):                         0.00\n",
            "Kurtosis:                      69.457   Cond. No.                         81.4\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Valor Mercado30Jun11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Abr11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xEB6lfd-lMew",
        "outputId": "bbde791c-3878-4ecb-9a69-5c74d1ec9839"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.020\n",
            "Model:                                   OLS   Adj. R-squared:                  0.007\n",
            "Method:                        Least Squares   F-statistic:                     1.494\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):              0.137\n",
            "Time:                               23:20:00   Log-Likelihood:                -13382.\n",
            "No. Observations:                        734   AIC:                         2.679e+04\n",
            "Df Residuals:                            723   BIC:                         2.684e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                         7.27e+06   1.47e+06      4.958      0.000    4.39e+06    1.01e+07\n",
            "tra2                            -2.253e+06   7.28e+06     -0.309      0.757   -1.66e+07     1.2e+07\n",
            "tem2                            -6.214e+05   1.53e+06     -0.407      0.684   -3.62e+06    2.37e+06\n",
            "tra2:tem2                       -6.756e+05   9.69e+06     -0.070      0.944   -1.97e+07    1.84e+07\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     3.044e+05   2.14e+05      1.421      0.156   -1.16e+05    7.25e+05\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")  -2.25e+05   7.64e+05     -0.295      0.768   -1.72e+06    1.27e+06\n",
            "Q(\"Intang Dez 2010_esc\")         3.596e+06   3.68e+06      0.976      0.329   -3.63e+06    1.08e+07\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")     1.215e+06   5.64e+06      0.215      0.829   -9.85e+06    1.23e+07\n",
            "Q(\"Receita Dez 2010_esc\")       -1.423e+06   1.33e+06     -1.067      0.286   -4.04e+06    1.19e+06\n",
            "Q(\"CxGerOp Dez 2010_esc\")        1.237e+07   4.96e+06      2.495      0.013    2.64e+06    2.21e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")        -1.072e+07    1.7e+07     -0.629      0.530   -4.42e+07    2.27e+07\n",
            "==============================================================================\n",
            "Omnibus:                      978.370   Durbin-Watson:                   0.501\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           141147.505\n",
            "Skew:                           7.048   Prob(JB):                         0.00\n",
            "Kurtosis:                      69.457   Cond. No.                         81.4\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Abr11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dkcTBM0ylYBF",
        "outputId": "75f1d04c-fb78-4471-c923-55c9b6324c85"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Abr11\")   R-squared:                       0.749\n",
            "Model:                            OLS   Adj. R-squared:                  0.745\n",
            "Method:                 Least Squares   F-statistic:                     209.3\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):          3.64e-203\n",
            "Time:                        23:21:13   Log-Likelihood:                -3041.4\n",
            "No. Observations:                 714   AIC:                             6105.\n",
            "Df Residuals:                     703   BIC:                             6155.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          12.8248      1.013     12.657      0.000      10.835      14.814\n",
            "tra2                                1.3250      6.181      0.214      0.830     -10.811      13.461\n",
            "tem2                               -1.2953      1.322     -0.980      0.327      -3.890       1.299\n",
            "tra2:tem2                          -2.6227      8.294     -0.316      0.752     -18.907      13.661\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0032      0.001      4.341      0.000       0.002       0.005\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0258      0.005      5.156      0.000       0.016       0.036\n",
            "Q(\"Intang Dez 2010_esc\")            0.1044      0.029      3.626      0.000       0.048       0.161\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.5445      0.023     23.247      0.000       0.499       0.591\n",
            "Q(\"Receita Dez 2010_esc\")           0.0856      0.013      6.395      0.000       0.059       0.112\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.1117      0.019      5.789      0.000       0.074       0.150\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0022      0.084      0.026      0.979      -0.162       0.166\n",
            "==============================================================================\n",
            "Omnibus:                      336.830   Durbin-Watson:                   0.848\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             2489.768\n",
            "Skew:                           1.979   Prob(JB):                         0.00\n",
            "Kurtosis:                      11.248   Cond. No.                     5.20e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 5.2e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Mai11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kne6AOQ6lk1A",
        "outputId": "97585552-d8e9-4a20-85b3-34ddf52c7d9c"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Mai11\")   R-squared:                       0.777\n",
            "Model:                            OLS   Adj. R-squared:                  0.774\n",
            "Method:                 Least Squares   F-statistic:                     245.0\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):          1.94e-221\n",
            "Time:                        23:21:41   Log-Likelihood:                -3050.6\n",
            "No. Observations:                 714   AIC:                             6123.\n",
            "Df Residuals:                     703   BIC:                             6173.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          13.9860      1.021     13.696      0.000      11.981      15.991\n",
            "tra2                                0.6952      6.261      0.111      0.912     -11.597      12.987\n",
            "tem2                               -1.5729      1.341     -1.173      0.241      -4.206       1.060\n",
            "tra2:tem2                          -3.0421      8.401     -0.362      0.717     -19.537      13.453\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0005      0.001      0.726      0.468      -0.001       0.002\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0330      0.005      6.512      0.000       0.023       0.043\n",
            "Q(\"Intang Dez 2010_esc\")            0.1088      0.029      3.747      0.000       0.052       0.166\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.5821      0.024     24.191      0.000       0.535       0.629\n",
            "Q(\"Receita Dez 2010_esc\")           0.0659      0.013      5.040      0.000       0.040       0.092\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.1545      0.019      7.937      0.000       0.116       0.193\n",
            "Q(\"OuReAb Dez 2010_esc\")           -0.0473      0.085     -0.559      0.576      -0.214       0.119\n",
            "==============================================================================\n",
            "Omnibus:                      324.181   Durbin-Watson:                   0.875\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             2005.071\n",
            "Skew:                           1.957   Prob(JB):                         0.00\n",
            "Kurtosis:                      10.216   Cond. No.                     5.20e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 5.2e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo2'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Jun11\") ~ tra2 + tem2 + tra2:tem2 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zlf42JMGlpfV",
        "outputId": "68c7467f-535e-4925-dd7f-63857c9b8d80"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Jun11\")   R-squared:                       0.788\n",
            "Model:                            OLS   Adj. R-squared:                  0.785\n",
            "Method:                 Least Squares   F-statistic:                     261.0\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):          1.81e-228\n",
            "Time:                        23:22:03   Log-Likelihood:                -3076.9\n",
            "No. Observations:                 711   AIC:                             6176.\n",
            "Df Residuals:                     700   BIC:                             6226.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          15.0641      1.080     13.942      0.000      12.943      17.185\n",
            "tra2                                2.0990      6.615      0.317      0.751     -10.889      15.087\n",
            "tem2                               -3.2932      1.418     -2.322      0.021      -6.077      -0.509\n",
            "tra2:tem2                          -5.1772      8.877     -0.583      0.560     -22.606      12.252\n",
            "Q(\"Patrim Liq Dez 2010_esc\")        0.0028      0.001      3.537      0.000       0.001       0.004\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0083      0.005      1.555      0.120      -0.002       0.019\n",
            "Q(\"Intang Dez 2010_esc\")            0.1116      0.031      3.606      0.000       0.051       0.172\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.5786      0.025     23.069      0.000       0.529       0.628\n",
            "Q(\"Receita Dez 2010_esc\")           0.0762      0.014      5.418      0.000       0.049       0.104\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.1649      0.021      7.991      0.000       0.124       0.205\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0150      0.107      0.139      0.889      -0.196       0.226\n",
            "==============================================================================\n",
            "Omnibus:                      344.267   Durbin-Watson:                   0.887\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             2700.885\n",
            "Skew:                           2.020   Prob(JB):                         0.00\n",
            "Kurtosis:                      11.651   Cond. No.                     5.20e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 5.2e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Abr11\") ~ tra3 + tem3 + tra3:tem3 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lF32gUxxlzil",
        "outputId": "fc9ad7d9-c9c0-4d6e-82f1-2c27d564a36a"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Abr11\")   R-squared:                       0.707\n",
            "Model:                                   OLS   Adj. R-squared:                  0.704\n",
            "Method:                        Least Squares   F-statistic:                     238.8\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          1.52e-255\n",
            "Time:                               23:22:52   Log-Likelihood:                -17807.\n",
            "No. Observations:                        999   AIC:                         3.564e+04\n",
            "Df Residuals:                            988   BIC:                         3.569e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    6.748e+05   6.54e+05      1.032      0.302   -6.08e+05    1.96e+06\n",
            "tra3                         1.892e+07   4.81e+06      3.935      0.000    9.49e+06    2.84e+07\n",
            "tem3                        -2.074e+06   8.69e+05     -2.388      0.017   -3.78e+06    -3.7e+05\n",
            "tra3:tem3                    1.421e+07   5.94e+06      2.391      0.017    2.55e+06    2.59e+07\n",
            "Q(\"Patrim Liq Dez 2010\")        1.5669      0.079     19.928      0.000       1.413       1.721\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.9388      0.271     -3.467      0.001      -1.470      -0.407\n",
            "Q(\"Intang Dez 2010\")           -0.4009      0.115     -3.485      0.001      -0.627      -0.175\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.8565      0.344      8.295      0.000       2.181       3.532\n",
            "Q(\"Receita Dez 2010\")          -0.3981      0.029    -13.659      0.000      -0.455      -0.341\n",
            "Q(\"CxGerOp Dez 2010\")           3.2722      0.254     12.905      0.000       2.775       3.770\n",
            "Q(\"OuReAb Dez 2010\")            8.3668      0.672     12.454      0.000       7.048       9.685\n",
            "==============================================================================\n",
            "Omnibus:                     1217.606   Durbin-Watson:                   0.877\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           380051.779\n",
            "Skew:                           5.760   Prob(JB):                         0.00\n",
            "Kurtosis:                      97.856   Cond. No.                     4.74e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.74e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Mai11\") ~ tra3 + tem3 + tra3:tem3 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SWBbqXJFl95m",
        "outputId": "9fe33502-2f9b-4504-ac9c-653798f3d638"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Mai11\")   R-squared:                       0.736\n",
            "Model:                                   OLS   Adj. R-squared:                  0.733\n",
            "Method:                        Least Squares   F-statistic:                     273.6\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          6.46e-276\n",
            "Time:                               23:23:23   Log-Likelihood:                -17653.\n",
            "No. Observations:                        994   AIC:                         3.533e+04\n",
            "Df Residuals:                            983   BIC:                         3.538e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    4.864e+05   6.13e+05      0.793      0.428   -7.17e+05    1.69e+06\n",
            "tra3                         1.924e+07   4.51e+06      4.270      0.000    1.04e+07    2.81e+07\n",
            "tem3                        -1.645e+06   8.16e+05     -2.016      0.044   -3.25e+06   -4.37e+04\n",
            "tra3:tem3                    1.152e+07   5.57e+06      2.069      0.039    5.94e+05    2.25e+07\n",
            "Q(\"Patrim Liq Dez 2010\")        1.5793      0.074     21.411      0.000       1.435       1.724\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.8047      0.254     -3.171      0.002      -1.303      -0.307\n",
            "Q(\"Intang Dez 2010\")           -0.3618      0.108     -3.356      0.001      -0.573      -0.150\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.9506      0.323      9.145      0.000       2.317       3.584\n",
            "Q(\"Receita Dez 2010\")          -0.4041      0.027    -14.798      0.000      -0.458      -0.351\n",
            "Q(\"CxGerOp Dez 2010\")           3.1497      0.238     13.257      0.000       2.683       3.616\n",
            "Q(\"OuReAb Dez 2010\")            8.0864      0.631     12.815      0.000       6.848       9.325\n",
            "==============================================================================\n",
            "Omnibus:                      889.942   Durbin-Watson:                   0.824\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            96784.868\n",
            "Skew:                           3.575   Prob(JB):                         0.00\n",
            "Kurtosis:                      50.809   Cond. No.                     4.74e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.74e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "# A interação entre 'trat1' e 'tem1' captura o efeito do tratamento\n",
        "formula = 'Q(\"Valor Mercado30Jun11\") ~ tra3 + tem3 + tra3:tem3 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando OLS\n",
        "modelo_diff_in_diff = smf.ols(formula=formula, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão\n",
        "print(modelo_diff_in_diff.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_mif44D2mB4c",
        "outputId": "cb63c5ca-b78f-4714-eaee-7d46f09bb80d"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                OLS Regression Results                               \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   R-squared:                       0.733\n",
            "Model:                                   OLS   Adj. R-squared:                  0.730\n",
            "Method:                        Least Squares   F-statistic:                     270.3\n",
            "Date:                       Mon, 05 Feb 2024   Prob (F-statistic):          3.22e-274\n",
            "Time:                               23:23:39   Log-Likelihood:                -17697.\n",
            "No. Observations:                        996   AIC:                         3.542e+04\n",
            "Df Residuals:                            985   BIC:                         3.547e+04\n",
            "Df Model:                                 10                                         \n",
            "Covariance Type:                   nonrobust                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    6.963e+05   6.19e+05      1.125      0.261   -5.18e+05    1.91e+06\n",
            "tra3                          2.13e+07   4.55e+06      4.687      0.000    1.24e+07    3.02e+07\n",
            "tem3                        -1.803e+06   8.22e+05     -2.193      0.029   -3.42e+06    -1.9e+05\n",
            "tra3:tem3                    9.549e+06   5.62e+06      1.700      0.090   -1.48e+06    2.06e+07\n",
            "Q(\"Patrim Liq Dez 2010\")        1.6556      0.074     22.282      0.000       1.510       1.801\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.8813      0.256     -3.443      0.001      -1.384      -0.379\n",
            "Q(\"Intang Dez 2010\")           -0.3431      0.109     -3.155      0.002      -0.556      -0.130\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.8457      0.326      8.742      0.000       2.207       3.485\n",
            "Q(\"Receita Dez 2010\")          -0.3972      0.028    -14.417      0.000      -0.451      -0.343\n",
            "Q(\"CxGerOp Dez 2010\")           2.9730      0.240     12.404      0.000       2.503       3.443\n",
            "Q(\"OuReAb Dez 2010\")            7.4622      0.634     11.761      0.000       6.217       8.707\n",
            "==============================================================================\n",
            "Omnibus:                      748.945   Durbin-Watson:                   0.792\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            48305.094\n",
            "Skew:                           2.827   Prob(JB):                         0.00\n",
            "Kurtosis:                      36.645   Cond. No.                     4.74e+08\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 4.74e+08. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Abr11\") ~ tra3 + tem3 + tra3:tem3 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IPHYRALfmOj-",
        "outputId": "98ca6642-616d-4530-9bf3-9ad9a6989fa9"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Abr11\")   R-squared:                       0.911\n",
            "Model:                            OLS   Adj. R-squared:                  0.910\n",
            "Method:                 Least Squares   F-statistic:                     977.0\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):               0.00\n",
            "Time:                        23:24:44   Log-Likelihood:                -4230.0\n",
            "No. Observations:                 967   AIC:                             8482.\n",
            "Df Residuals:                     956   BIC:                             8536.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          13.0819      0.944     13.864      0.000      11.230      14.934\n",
            "tra3                               -4.0607      6.896     -0.589      0.556     -17.594       9.472\n",
            "tem3                                5.2509      1.272      4.128      0.000       2.755       7.747\n",
            "tra3:tem3                           5.0953      8.553      0.596      0.552     -11.690      21.880\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       -0.0042      0.001     -7.742      0.000      -0.005      -0.003\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0372      0.002     16.098      0.000       0.033       0.042\n",
            "Q(\"Intang Dez 2010_esc\")            0.2412      0.021     11.729      0.000       0.201       0.282\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.5252      0.017     31.063      0.000       0.492       0.558\n",
            "Q(\"Receita Dez 2010_esc\")          -0.0992      0.005    -19.420      0.000      -0.109      -0.089\n",
            "Q(\"CxGerOp Dez 2010_esc\")          -0.0573      0.007     -8.194      0.000      -0.071      -0.044\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0579      0.030      1.900      0.058      -0.002       0.118\n",
            "==============================================================================\n",
            "Omnibus:                      484.056   Durbin-Watson:                   0.967\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             6437.368\n",
            "Skew:                           1.955   Prob(JB):                         0.00\n",
            "Kurtosis:                      15.020   Cond. No.                     6.95e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 6.95e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Mai11\") ~ tra3 + tem3 + tra3:tem3 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7hgdk-AmmWps",
        "outputId": "ea24bbb4-fb5b-43d8-e9d9-ea58bc618ce5"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Mai11\")   R-squared:                       0.882\n",
            "Model:                            OLS   Adj. R-squared:                  0.880\n",
            "Method:                 Least Squares   F-statistic:                     706.1\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):               0.00\n",
            "Time:                        23:25:59   Log-Likelihood:                -4198.9\n",
            "No. Observations:                 959   AIC:                             8420.\n",
            "Df Residuals:                     948   BIC:                             8473.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          12.6498      0.959     13.195      0.000      10.768      14.531\n",
            "tra3                               -3.8426      6.926     -0.555      0.579     -17.434       9.749\n",
            "tem3                                6.6107      1.285      5.146      0.000       4.090       9.132\n",
            "tra3:tem3                           3.6124      8.589      0.421      0.674     -13.244      20.469\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       -0.0077      0.001    -13.949      0.000      -0.009      -0.007\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0458      0.002     19.756      0.000       0.041       0.050\n",
            "Q(\"Intang Dez 2010_esc\")            0.2124      0.021     10.249      0.000       0.172       0.253\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.4734      0.017     27.675      0.000       0.440       0.507\n",
            "Q(\"Receita Dez 2010_esc\")          -0.0905      0.005    -17.662      0.000      -0.101      -0.080\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0101      0.007      1.429      0.153      -0.004       0.024\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.0847      0.031      2.751      0.006       0.024       0.145\n",
            "==============================================================================\n",
            "Omnibus:                      468.942   Durbin-Watson:                   0.926\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5889.353\n",
            "Skew:                           1.913   Prob(JB):                         0.00\n",
            "Kurtosis:                      14.522   Cond. No.                     6.96e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 6.96e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado e criamos uma cópia para evitar o SettingWithCopyWarning\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Escalonando as variáveis pelo 'ativo total t-1', utilizando .loc para evitar warnings\n",
        "variaveis_para_escalonar = ['Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "                            'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010']\n",
        "\n",
        "for var in variaveis_para_escalonar:\n",
        "    df_filtrado.loc[:, f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para incluir as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Jun11\") ~ tra3 + tem3 + tra3:tem3 + \\\n",
        "Q(\"Patrim Liq Dez 2010_esc\") + Q(\"Lucro Liquido Dez 2010_esc\") + Q(\"Intang Dez 2010_esc\") + \\\n",
        "Q(\"CaixaEEqCx Dez 2010_esc\") + Q(\"Receita Dez 2010_esc\") + Q(\"CxGerOp Dez 2010_esc\") + \\\n",
        "Q(\"OuReAb Dez 2010_esc\")'\n",
        "\n",
        "# Estimando o modelo usando OLS com as variáveis escalonadas\n",
        "modelo_diff_in_diff_escalonado = smf.ols(formula=formula_escalonada, data=df_filtrado).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão escalonada\n",
        "print(modelo_diff_in_diff_escalonado.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hn70i1X3mbvV",
        "outputId": "99e152ed-797a-401e-a449-2aaae3f83ca6"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Jun11\")   R-squared:                       0.853\n",
            "Model:                            OLS   Adj. R-squared:                  0.851\n",
            "Method:                 Least Squares   F-statistic:                     545.8\n",
            "Date:                Mon, 05 Feb 2024   Prob (F-statistic):               0.00\n",
            "Time:                        23:26:32   Log-Likelihood:                -4241.2\n",
            "No. Observations:                 955   AIC:                             8504.\n",
            "Df Residuals:                     944   BIC:                             8558.\n",
            "Df Model:                          10                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          13.6019      1.020     13.341      0.000      11.601      15.603\n",
            "tra3                               -4.2986      7.374     -0.583      0.560     -18.769      10.172\n",
            "tem3                                5.7398      1.370      4.190      0.000       3.052       8.428\n",
            "tra3:tem3                           3.9290      9.145      0.430      0.668     -14.018      21.876\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       -0.0064      0.001    -10.895      0.000      -0.008      -0.005\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0223      0.002      9.034      0.000       0.017       0.027\n",
            "Q(\"Intang Dez 2010_esc\")            0.1842      0.022      8.322      0.000       0.141       0.228\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.4677      0.018     25.780      0.000       0.432       0.503\n",
            "Q(\"Receita Dez 2010_esc\")          -0.0890      0.005    -16.259      0.000      -0.100      -0.078\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0266      0.007      3.556      0.000       0.012       0.041\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.1026      0.033      3.078      0.002       0.037       0.168\n",
            "==============================================================================\n",
            "Omnibus:                      503.048   Durbin-Watson:                   0.958\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             7003.871\n",
            "Skew:                           2.075   Prob(JB):                         0.00\n",
            "Kurtosis:                      15.601   Cond. No.                     6.95e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 6.95e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "from patsy import dmatrices\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1]\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "formula = 'Q(\"Valor Mercado30Jun11\") ~ tra3 + tem3 + tra3:tem3 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Preparando os dados para a regressão robusta\n",
        "y, X = dmatrices(formula, data=df_filtrado, return_type='dataframe')\n",
        "\n",
        "# Estimando o modelo usando RLM com a norma de Huber\n",
        "modelo_diff_in_diff_robusto = sm.RLM(y, X, M=sm.robust.norms.HuberT()).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão robusta\n",
        "print(modelo_diff_in_diff_robusto.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sQkqrVk7nm6i",
        "outputId": "f96d5f0f-cd9b-4d1f-bd19-aeb300ad5701"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                        Robust linear Model Regression Results                       \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   No. Observations:                  996\n",
            "Model:                                   RLM   Df Residuals:                      985\n",
            "Method:                                 IRLS   Df Model:                           10\n",
            "Norm:                                 HuberT                                         \n",
            "Scale Est.:                              mad                                         \n",
            "Cov Type:                                 H1                                         \n",
            "Date:                       Mon, 05 Feb 2024                                         \n",
            "Time:                               23:46:11                                         \n",
            "No. Iterations:                            2                                         \n",
            "===============================================================================================\n",
            "                                  coef    std err          z      P>|z|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                    2.526e+05   1.13e+05      2.241      0.025    3.17e+04    4.74e+05\n",
            "tra3                         1.982e+07   8.28e+05     23.932      0.000    1.82e+07    2.14e+07\n",
            "tem3                        -3.994e+05    1.5e+05     -2.666      0.008   -6.93e+05   -1.06e+05\n",
            "tra3:tem3                    4.933e+06   1.02e+06      4.818      0.000    2.93e+06    6.94e+06\n",
            "Q(\"Patrim Liq Dez 2010\")        1.3808      0.014    101.984      0.000       1.354       1.407\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.6264      0.047    -13.430      0.000      -0.718      -0.535\n",
            "Q(\"Intang Dez 2010\")           -0.1124      0.020     -5.673      0.000      -0.151      -0.074\n",
            "Q(\"CaixaEEqCx Dez 2010\")        2.1783      0.059     36.722      0.000       2.062       2.295\n",
            "Q(\"Receita Dez 2010\")          -0.3468      0.005    -69.093      0.000      -0.357      -0.337\n",
            "Q(\"CxGerOp Dez 2010\")           2.8552      0.044     65.371      0.000       2.770       2.941\n",
            "Q(\"OuReAb Dez 2010\")            5.3437      0.116     46.219      0.000       5.117       5.570\n",
            "===============================================================================================\n",
            "\n",
            "If the model instance has been used for another fit with different fit parameters, then the fit options might not be the correct ones anymore .\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "from patsy import dmatrices\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Adicionando colunas escalonadas ao DataFrame\n",
        "variaveis = [\n",
        "    'Valor Mercado30Jun11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "    'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010'\n",
        "]\n",
        "\n",
        "for var in variaveis:\n",
        "    df_filtrado[f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para usar as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Jun11\") ~ tra3 + tem3 + tra3:tem3 + ' + \\\n",
        "    ' + '.join([f'Q(\"{var}_esc\")' for var in variaveis])\n",
        "\n",
        "# Preparando os dados para a regressão robusta\n",
        "y, X = dmatrices(formula_escalonada, data=df_filtrado, return_type='dataframe')\n",
        "\n",
        "# Estimando o modelo usando RLM com a norma de Huber\n",
        "modelo_diff_in_diff_robusto = sm.RLM(y, X, M=sm.robust.norms.HuberT()).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão robusta\n",
        "print(modelo_diff_in_diff_robusto.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TCea75k_sUMg",
        "outputId": "a06608b3-99ac-4e14-e94f-be940487f2d3"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                        Robust linear Model Regression Results                       \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   No. Observations:                  996\n",
            "Model:                                   RLM   Df Residuals:                      984\n",
            "Method:                                 IRLS   Df Model:                           11\n",
            "Norm:                                 HuberT                                         \n",
            "Scale Est.:                              mad                                         \n",
            "Cov Type:                                 H1                                         \n",
            "Date:                       Mon, 05 Feb 2024                                         \n",
            "Time:                               23:51:39                                         \n",
            "No. Iterations:                            2                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          z      P>|z|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                        3.569e+06   3.67e+05      9.722      0.000    2.85e+06    4.29e+06\n",
            "tra3                             1.531e+07   2.07e+06      7.388      0.000    1.13e+07    1.94e+07\n",
            "tem3                             8.035e+05   3.74e+05      2.147      0.032    7.01e+04    1.54e+06\n",
            "tra3:tem3                       -5.863e+06   2.57e+06     -2.285      0.022   -1.09e+07   -8.34e+05\n",
            "Q(\"Valor Mercado30Jun11_esc\")    3.564e+05   7.57e+04      4.709      0.000    2.08e+05    5.05e+05\n",
            "Q(\"Patrim Liq Dez 2010_esc\")     1.924e+05   5.14e+04      3.744      0.000    9.17e+04    2.93e+05\n",
            "Q(\"Lucro Liquido Dez 2010_esc\") -1.513e+05   2.15e+05     -0.705      0.481   -5.72e+05     2.7e+05\n",
            "Q(\"Intang Dez 2010_esc\")         7.494e+06   9.36e+05      8.003      0.000    5.66e+06    9.33e+06\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")    -7.229e+06   1.16e+06     -6.232      0.000    -9.5e+06   -4.96e+06\n",
            "Q(\"Receita Dez 2010_esc\")       -8.455e+05   3.37e+05     -2.508      0.012   -1.51e+06   -1.85e+05\n",
            "Q(\"CxGerOp Dez 2010_esc\")        8.261e+06   1.18e+06      6.979      0.000    5.94e+06    1.06e+07\n",
            "Q(\"OuReAb Dez 2010_esc\")         2.694e+06   5.18e+06      0.520      0.603   -7.46e+06    1.28e+07\n",
            "===================================================================================================\n",
            "\n",
            "If the model instance has been used for another fit with different fit parameters, then the fit options might not be the correct ones anymore .\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "from patsy import dmatrices\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Adicionando colunas escalonadas ao DataFrame\n",
        "variaveis = [\n",
        "    'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "    'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010'\n",
        "]\n",
        "\n",
        "for var in variaveis:\n",
        "    df_filtrado[f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para usar as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Jun11\") ~ tra3 + tem3 + tra3:tem3 + ' + \\\n",
        "    ' + '.join([f'Q(\"{var}_esc\")' for var in variaveis])\n",
        "\n",
        "# Preparando os dados para a regressão robusta\n",
        "y, X = dmatrices(formula_escalonada, data=df_filtrado, return_type='dataframe')\n",
        "\n",
        "# Estimando o modelo usando RLM com a norma de Huber\n",
        "modelo_diff_in_diff_robusto = sm.RLM(y, X, M=sm.robust.norms.HuberT()).fit()\n",
        "\n",
        "# Exibindo os resultados da regressão robusta\n",
        "print(modelo_diff_in_diff_robusto.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lbzoGMrMsnr9",
        "outputId": "a3a0c450-a038-456b-c7c0-1495e955c8bb"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                    Robust linear Model Regression Results                    \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Jun11\")   No. Observations:                  955\n",
            "Model:                            RLM   Df Residuals:                      944\n",
            "Method:                          IRLS   Df Model:                           10\n",
            "Norm:                          HuberT                                         \n",
            "Scale Est.:                       mad                                         \n",
            "Cov Type:                          H1                                         \n",
            "Date:                Mon, 05 Feb 2024                                         \n",
            "Time:                        23:53:25                                         \n",
            "No. Iterations:                    50                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          z      P>|z|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                          11.3415      0.556     20.411      0.000      10.252      12.431\n",
            "tra3                               -2.3973      4.018     -0.597      0.551     -10.273       5.479\n",
            "tem3                                3.4874      0.746      4.672      0.000       2.024       4.951\n",
            "tra3:tem3                           4.7133      4.984      0.946      0.344      -5.055      14.481\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       -0.0057      0.000    -17.979      0.000      -0.006      -0.005\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0250      0.001     18.593      0.000       0.022       0.028\n",
            "Q(\"Intang Dez 2010_esc\")            0.0651      0.012      5.399      0.000       0.041       0.089\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.4467      0.010     45.178      0.000       0.427       0.466\n",
            "Q(\"Receita Dez 2010_esc\")          -0.0556      0.003    -18.631      0.000      -0.061      -0.050\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0444      0.004     10.897      0.000       0.036       0.052\n",
            "Q(\"OuReAb Dez 2010_esc\")            0.1071      0.018      5.897      0.000       0.072       0.143\n",
            "===================================================================================================\n",
            "\n",
            "If the model instance has been used for another fit with different fit parameters, then the fit options might not be the correct ones anymore .\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Definindo a fórmula do modelo Diff-in-Diff\n",
        "formula = 'Q(\"Valor Mercado30Jun11\") ~ tra3 + tem3 + tra3:tem3 + Q(\"Patrim Liq Dez 2010\") + Q(\"Lucro Liquido Dez 2010\") + Q(\"Intang Dez 2010\") + Q(\"CaixaEEqCx Dez 2010\") + Q(\"Receita Dez 2010\") + Q(\"CxGerOp Dez 2010\") + Q(\"OuReAb Dez 2010\")'\n",
        "\n",
        "# Estimando o modelo usando regressão quantílica na mediana\n",
        "modelo_diff_in_diff_quantilica = smf.quantreg(formula, df_filtrado).fit(q=0.5)\n",
        "\n",
        "# Exibindo os resultados da regressão quantílica\n",
        "print(modelo_diff_in_diff_quantilica.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6rHuP5oktigt",
        "outputId": "f383a93d-103c-4ccd-b3b0-9c53d1c26cb7"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                             QuantReg Regression Results                             \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   Pseudo R-squared:               0.4558\n",
            "Model:                              QuantReg   Bandwidth:                   5.991e+05\n",
            "Method:                        Least Squares   Sparsity:                    2.137e+06\n",
            "Date:                       Mon, 05 Feb 2024   No. Observations:                  996\n",
            "Time:                               23:56:25   Df Residuals:                      985\n",
            "                                               Df Model:                           10\n",
            "===============================================================================================\n",
            "                                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------------\n",
            "Intercept                   -2.979e-06   2.69e+04  -1.11e-10      1.000   -5.28e+04    5.28e+04\n",
            "tra3                        -2.011e-11    591.876   -3.4e-14      1.000   -1161.483    1161.483\n",
            "tem3                         2.177e-07   1.79e+04   1.21e-11      1.000   -3.52e+04    3.52e+04\n",
            "tra3:tem3                   -7.126e-11    444.232   -1.6e-13      1.000    -871.750     871.750\n",
            "Q(\"Patrim Liq Dez 2010\")        0.7364      0.006    119.420      0.000       0.724       0.749\n",
            "Q(\"Lucro Liquido Dez 2010\")    -0.4309      0.022    -19.991      0.000      -0.473      -0.389\n",
            "Q(\"Intang Dez 2010\")            0.3543      0.009     38.670      0.000       0.336       0.372\n",
            "Q(\"CaixaEEqCx Dez 2010\")        1.4709      0.027     53.858      0.000       1.417       1.524\n",
            "Q(\"Receita Dez 2010\")          -0.2186      0.002    -94.236      0.000      -0.223      -0.214\n",
            "Q(\"CxGerOp Dez 2010\")           2.3880      0.020    118.233      0.000       2.348       2.428\n",
            "Q(\"OuReAb Dez 2010\")            1.6180      0.053     30.513      0.000       1.514       1.722\n",
            "===============================================================================================\n",
            "\n",
            "The smallest eigenvalue is   -186. This might indicate that there are\n",
            "strong multicollinearity problems or that the design matrix is singular.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1966: RuntimeWarning: invalid value encountered in sqrt\n",
            "  return np.sqrt(eigvals[0]/eigvals[-1])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "from patsy import dmatrices\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Adicionando colunas escalonadas ao DataFrame\n",
        "variaveis = [\n",
        "    'Valor Mercado30Jun11', 'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "    'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010'\n",
        "]\n",
        "\n",
        "# Certifique-se de que 'quant acoes' é a variável correta para escalar as outras variáveis\n",
        "for var in variaveis:\n",
        "    df_filtrado[f'{var}_esc'] = df_filtrado[var] / df_filtrado['ativo total t-1']\n",
        "\n",
        "# Atualizando a fórmula do modelo para usar as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"Valor Mercado30Jun11\") ~ tra3 + tem3 + tra3:tem3 + ' + \\\n",
        "    ' + '.join([f'Q(\"{var}_esc\")' for var in variaveis])\n",
        "\n",
        "# Estimando o modelo usando regressão quantílica na mediana\n",
        "modelo_diff_in_diff_quantilica = smf.quantreg(formula_escalonada, df_filtrado).fit(q=0.5)\n",
        "\n",
        "# Exibindo os resultados da regressão quantílica\n",
        "print(modelo_diff_in_diff_quantilica.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rpUeAf0DujlF",
        "outputId": "24f63913-9955-43ab-f466-bdc184aa5cbd"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                             QuantReg Regression Results                             \n",
            "=====================================================================================\n",
            "Dep. Variable:     Q(\"Valor Mercado30Jun11\")   Pseudo R-squared:              0.04365\n",
            "Model:                              QuantReg   Bandwidth:                   1.862e+06\n",
            "Method:                        Least Squares   Sparsity:                    5.447e+06\n",
            "Date:                       Tue, 06 Feb 2024   No. Observations:                  996\n",
            "Time:                               00:01:43   Df Residuals:                      984\n",
            "                                               Df Model:                           11\n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                        8.239e+05   1.73e+05      4.774      0.000    4.85e+05    1.16e+06\n",
            "tra3                             6.585e+06   9.74e+05      6.758      0.000    4.67e+06     8.5e+06\n",
            "tem3                             2.331e+05   1.76e+05      1.325      0.185   -1.12e+05    5.78e+05\n",
            "tra3:tem3                       -3.098e+06   1.21e+06     -2.569      0.010   -5.46e+06   -7.31e+05\n",
            "Q(\"Valor Mercado30Jun11_esc\")    2.871e+05   3.56e+04      8.072      0.000    2.17e+05    3.57e+05\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       5.8e+04   2.42e+04      2.401      0.017    1.06e+04    1.05e+05\n",
            "Q(\"Lucro Liquido Dez 2010_esc\") -3.574e+04   1.01e+05     -0.354      0.723   -2.34e+05    1.62e+05\n",
            "Q(\"Intang Dez 2010_esc\")          6.83e+06    4.4e+05     15.519      0.000    5.97e+06    7.69e+06\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")    -2.085e+06   5.45e+05     -3.824      0.000   -3.15e+06   -1.01e+06\n",
            "Q(\"Receita Dez 2010_esc\")        -6.26e+05   1.58e+05     -3.951      0.000   -9.37e+05   -3.15e+05\n",
            "Q(\"CxGerOp Dez 2010_esc\")        6.293e+06   5.56e+05     11.312      0.000     5.2e+06    7.39e+06\n",
            "Q(\"OuReAb Dez 2010_esc\")         1.674e+06   2.43e+06      0.688      0.492    -3.1e+06    6.45e+06\n",
            "===================================================================================================\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/quantile_regression.py:191: IterationLimitWarning: Maximum number of iterations (1000) reached.\n",
            "  warnings.warn(\"Maximum number of iterations (\" + str(max_iter) +\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf\n",
        "from patsy import dmatrices\n",
        "\n",
        "# Supondo que 'df' seja o seu DataFrame após ler o arquivo Excel\n",
        "# Primeiro, filtramos as linhas conforme especificado\n",
        "df_filtrado = df[df['modelo3'] == 1].copy()\n",
        "\n",
        "# Adicionando colunas escalonadas ao DataFrame\n",
        "variaveis = [\n",
        "    'Patrim Liq Dez 2010', 'Lucro Liquido Dez 2010', 'Intang Dez 2010',\n",
        "    'CaixaEEqCx Dez 2010', 'Receita Dez 2010', 'CxGerOp Dez 2010', 'OuReAb Dez 2010'\n",
        "]\n",
        "\n",
        "# Certifique-se de que 'quant acoes' é a variável correta para escalar as outras variáveis\n",
        "for var in variaveis:\n",
        "    df_filtrado[f'{var}_esc'] = df_filtrado[var] / df_filtrado['quant acoes']\n",
        "\n",
        "# Atualizando a fórmula do modelo para usar as variáveis escalonadas\n",
        "formula_escalonada = 'Q(\"PU30Jun11\") ~ tra3 + tem3 + tra3:tem3 + ' + \\\n",
        "    ' + '.join([f'Q(\"{var}_esc\")' for var in variaveis])\n",
        "\n",
        "# Estimando o modelo usando regressão quantílica na mediana\n",
        "modelo_diff_in_diff_quantilica = smf.quantreg(formula_escalonada, df_filtrado).fit(q=0.5)\n",
        "\n",
        "# Exibindo os resultados da regressão quantílica\n",
        "print(modelo_diff_in_diff_quantilica.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V7pZr4JPuaMB",
        "outputId": "338128ff-99b9-47dc-8978-ff30d0458f23"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                         QuantReg Regression Results                          \n",
            "==============================================================================\n",
            "Dep. Variable:         Q(\"PU30Jun11\")   Pseudo R-squared:               0.2359\n",
            "Model:                       QuantReg   Bandwidth:                       5.379\n",
            "Method:                 Least Squares   Sparsity:                        24.75\n",
            "Date:                Tue, 06 Feb 2024   No. Observations:                  955\n",
            "Time:                        00:00:12   Df Residuals:                      944\n",
            "                                        Df Model:                           10\n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "Intercept                           8.5590      0.611     14.012      0.000       7.360       9.758\n",
            "tra3                               -0.5200      4.417     -0.118      0.906      -9.189       8.149\n",
            "tem3                                3.2889      0.821      4.008      0.000       1.679       4.899\n",
            "tra3:tem3                          -0.5182      5.479     -0.095      0.925     -11.270      10.233\n",
            "Q(\"Patrim Liq Dez 2010_esc\")       -0.0054      0.000    -15.316      0.000      -0.006      -0.005\n",
            "Q(\"Lucro Liquido Dez 2010_esc\")     0.0269      0.001     18.183      0.000       0.024       0.030\n",
            "Q(\"Intang Dez 2010_esc\")            0.0609      0.013      4.594      0.000       0.035       0.087\n",
            "Q(\"CaixaEEqCx Dez 2010_esc\")        0.4416      0.011     40.632      0.000       0.420       0.463\n",
            "Q(\"Receita Dez 2010_esc\")          -0.0355      0.003    -10.837      0.000      -0.042      -0.029\n",
            "Q(\"CxGerOp Dez 2010_esc\")           0.0649      0.004     14.466      0.000       0.056       0.074\n",
            "Q(\"OuReAb Dez 2010_esc\")           -0.0354      0.020     -1.773      0.076      -0.075       0.004\n",
            "===================================================================================================\n",
            "\n",
            "The condition number is large, 6.95e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    }
  ]
}